
<div class="student-card">
    <div class="student-header">
        <div class="student-avatar">@StudentHelper.GetInitials(Student)</div>
        <div class="student-info">
            <h3>@StudentHelper.GetFullName(Student)</h3>
            <p>
                <strong>Email:</strong>
                @(!string.IsNullOrWhiteSpace(FirstEmail?.Mail) ? FirstEmail.Mail : "No registrado")
                @if (FirstEmail != null)
                {
                    <span class="text-muted"> (@FirstEmail.EmailType) </span>
                }
            </p>
            <p><strong>Género:</strong> @(Student.StudentGender == Student.Gender.M ? "M" : "F")</p>
        </div>
    </div>
    <div class="student-details">
        <div class="detail-row">
            <span class="detail-label">Estado:</span>
            <span class="detail-value">@(!string.IsNullOrWhiteSpace(State) ? State : "No registrado")</span>
        </div>
        <div class="detail-row">
            <span class="detail-label">Ciudad:</span>
            <span class="detail-value">@(!string.IsNullOrWhiteSpace(City) ? City : "No registrado")</span>
        </div>
        <div class="detail-row">
            <span class="detail-label">Dirección:</span>
            <span class="detail-value">@(!string.IsNullOrWhiteSpace(AddressLine) ? AddressLine : "No registrada")</span>
        </div>
        <div class="detail-row">
            <span class="detail-label">Código Postal:</span>
            <span class="detail-value">@(!string.IsNullOrWhiteSpace(Zip) ? Zip : "No registrado")</span>
        </div>
        <div class="detail-row">
            <span class="detail-label">Teléfono:</span>
            <span class="detail-value">
                @(!string.IsNullOrWhiteSpace(AreaCode) ? $"({AreaCode })" : "(N/A) ")
                @(!string.IsNullOrWhiteSpace(PhoneNumber) ? PhoneNumber : "No registrado")
            </span>
        </div>
    </div>
    <div class="student-actions">
        <button class="btn btn-sm btn-info" @onclick="() => OnView.InvokeAsync(Student)">
            <i class="fas fa-eye"></i>
        </button>
        <button class="btn btn-sm btn-success" @onclick="() => OnEdit.InvokeAsync(Student)">
            <i class="fas fa-edit"></i>
        </button>
        <button class="btn btn-sm btn-danger" @onclick="() => OnDelete.InvokeAsync(Student.Id)">
            <i class="fas fa-trash"></i>
        </button>
    </div>
</div>

@code {
    [Parameter] public Student Student { get; set; } = new();
    [Parameter] public EventCallback<Student> OnEdit { get; set; }
    [Parameter] public EventCallback<Student> OnView { get; set; }
    [Parameter] public EventCallback<int> OnDelete { get; set; }
    private Email? FirstEmail => Student.Emails?.FirstOrDefault();
    private Address? FirstAddress => Student.Addresses?.FirstOrDefault();
    private Phone? FirstPhone => Student.Phones?.FirstOrDefault();
    private string? State => FirstAddress?.State;
    private string? City => FirstAddress?.City;
    private string? AddressLine => FirstAddress?.Address_Line;
    private string? Zip => FirstAddress?.Zip_Postcode;
    private string? AreaCode => FirstPhone?.AreaCode;
    private string? PhoneNumber => FirstPhone?.Phone_Number;
}

    